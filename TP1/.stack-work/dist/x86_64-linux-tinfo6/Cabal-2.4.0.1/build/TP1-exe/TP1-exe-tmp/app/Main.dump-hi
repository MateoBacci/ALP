
==================== FINAL INTERFACE ====================
2023-09-26 21:05:45.956003638 UTC

interface main:Main 8064
  interface hash: a93c78579981a38860a3f258f106a486
  ABI hash: ad8e3186de2fc6fb5c481badb653680c
  export-list hash: be3913285ffbf52cbfd9ef25e0630ab8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5937bdbce4149a627990e4b8811ec988
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.defaultOptions
  Main.finalOptions
  Main.main
  Main.options
  Main.runOptions
  Main.Options{Main.Options optAST optEval optHelp optPrint}
module dependencies:
package dependencies: TP1-0.1.0.0 array-0.5.3.0 base-4.12.0.0
                      binary-0.8.6.0 bytestring-0.10.8.2 containers-0.6.0.1
                      deepseq-1.4.4.0 ghc-prim-0.5.3 integer-gmp-1.0.2.0 mtl-2.2.2
                      parsec-3.1.13.0 pretty-1.1.3.6 strict-0.3.2 text-1.2.3.1
                      transformers-0.5.6.2
orphans: text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ text-1.2.3.1:Data.Text
                         text-1.2.3.1:Data.Text.Lazy
import  -/  TP1-0.1.0.0:Eval1 4348a0fa997947a5952c510a96938995
import  -/  TP1-0.1.0.0:Eval2 c1da0b1c4692a0e1a273901e5be328cb
import  -/  TP1-0.1.0.0:Eval3 002945a68e6997a01e8d55940e54bc96
import  -/  TP1-0.1.0.0:PPLis 1ae93d397020c67b61486a0fdbece703
import  -/  TP1-0.1.0.0:Parser a01bcc3232298ae464531f62506b65c4
import  -/  base-4.12.0.0:Control.Monad 728c9526f38369d3ad3bf7824b06e87e
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.IO.Exception 450806ae9fed7fcace0a23ab62a9d604
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.Console.GetOpt a02d0090ed562b745f45d8ae5625dc05
import  -/  base-4.12.0.0:System.Environment c54e0d0308e729fdace6bc37aa74bb52
import  -/  base-4.12.0.0:System.Exit 515b274dfd11f1bb927c19c072587cec
import  -/  base-4.12.0.0:System.IO dd4f3cfe73b94b7cae46a4ca98a3f09f
import  -/  base-4.12.0.0:Text.Read 87f80fc2538a174aea915dd98f74fc0a
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
7018561aac28ae27150ccc12c6207c1b
  $fShowOptions :: GHC.Show.Show Main.Options
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Options
                  Main.$fShowOptions_$cshowsPrec
                  Main.$fShowOptions_$cshow
                  Main.$fShowOptions_$cshowList -}
7018561aac28ae27150ccc12c6207c1b
  $fShowOptions1 :: Main.Options -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U(U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.Options) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Options ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 w1 }) -}
6e7f15f96c47c1c270f15bd2fdd37868
  $fShowOptions2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOptions3) -}
7baaf5a3896fb56b50ae31dfc204e45e
  $fShowOptions3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
480c856004a23432f22937c5894df938
  $fShowOptions4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("optHelp = "#) -}
cb3510b5adb156108c3e529ff9d7eb9f
  $fShowOptions5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("optEval = "#) -}
f35e5937b53b726c3dfc1613a1ce11a7
  $fShowOptions6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("optAST = "#) -}
6257efea5754b85826e6062b93b96fb7
  $fShowOptions7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("optPrint = "#) -}
66649cf5d0aa2f96fde64a866c5a1d50
  $fShowOptions8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Options {"#) -}
b13a5f35c3f1b0a1b2b8a63a143fdfd3
  $fShowOptions9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
7018561aac28ae27150ccc12c6207c1b
  $fShowOptions_$cshow :: Main.Options -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Options) ->
                 Main.$fShowOptions_$cshowsPrec
                   Main.$fShowOptions9
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7018561aac28ae27150ccc12c6207c1b
  $fShowOptions_$cshowList :: [Main.Options] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Options]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Options Main.$fShowOptions1 ls s) -}
7018561aac28ae27150ccc12c6207c1b
  $fShowOptions_$cshowsPrec ::
    GHC.Types.Int -> Main.Options -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U(U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Options)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Options ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 w2 } }) -}
a182146e029b7db1ec67dbc11239c462
  $tc'Options :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8640468244294061274##
                   2017335793381275428##
                   Main.$trModule
                   Main.$tc'Options2
                   0#
                   Main.$tc'Options1) -}
bbc8982cca71125f8080b2256fb9df29
  $tc'Options1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4e3da5ffc320538cc681e7507ee38357
  $tc'Options2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Options3) -}
cbd0d878b9dd4cbc694837517cef23ee
  $tc'Options3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Options"#) -}
0a8fd5ad0c74623b3fc69235e031154e
  $tcOptions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3120245790939931204##
                   8523920595110744436##
                   Main.$trModule
                   Main.$tcOptions1
                   0#
                   GHC.Types.krep$*) -}
77f1e1d6f46d1ddf82e0eb110e497439
  $tcOptions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcOptions2) -}
28105ff6d0a5067e424280a79344807d
  $tcOptions2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Options"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
42b4369e61fb6b31a3bba74a6a0ac563
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,1*U><L,1*U><L,1*U(U)><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: GHC.Types.Bool)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowOptions8
                       (GHC.CString.unpackAppendCString#
                          Main.$fShowOptions7
                          (let {
                             eta :: GHC.Base.String
                             = GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Main.$fShowOptions6
                                    (let {
                                       eta1 :: GHC.Base.String
                                       = GHC.Base.++
                                           @ GHC.Types.Char
                                           GHC.Show.showCommaSpace1
                                           (GHC.CString.unpackAppendCString#
                                              Main.$fShowOptions5
                                              (case ww3 of ww5 { GHC.Types.I# ww6 ->
                                               case GHC.Show.$wshowSignedInt
                                                      0#
                                                      ww6
                                                      (GHC.Base.++
                                                         @ GHC.Types.Char
                                                         GHC.Show.showCommaSpace1
                                                         (GHC.CString.unpackAppendCString#
                                                            Main.$fShowOptions4
                                                            (case ww4 of wild {
                                                               GHC.Types.False
                                                               -> GHC.Base.++
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.$fShowBool4
                                                                    (GHC.Base.++
                                                                       @ GHC.Types.Char
                                                                       Main.$fShowOptions2
                                                                       x)
                                                               GHC.Types.True
                                                               -> GHC.Base.++
                                                                    @ GHC.Types.Char
                                                                    GHC.Show.$fShowBool2
                                                                    (GHC.Base.++
                                                                       @ GHC.Types.Char
                                                                       Main.$fShowOptions2
                                                                       x) }))) of ww7 { (#,#) ww8 ww9 ->
                                               GHC.Types.: @ GHC.Types.Char ww8 ww9 } }))
                                     } in
                                     case ww2 of wild {
                                       GHC.Types.False
                                       -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool4 eta1
                                       GHC.Types.True
                                       -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool2 eta1 }))
                           } in
                           case ww1 of wild {
                             GHC.Types.False
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool4 eta
                             GHC.Types.True
                             -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool2 eta }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
692906faa18ce12c9cea390c09a5c0c0
  $wrunOptions ::
    GHC.IO.FilePath
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U><L,1*U><L,1*U><L,1*U(1*U)><S,1*U><S,U>,
     Inline: [2] -}
7018561aac28ae27150ccc12c6207c1b
  data Options
    = Options {optPrint :: GHC.Types.Bool,
               optAST :: GHC.Types.Bool,
               optEval :: GHC.Types.Int,
               optHelp :: GHC.Types.Bool}
b94489e4bb726e9ebe7eb052a756118a
  defaultOptions :: Main.Options
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Main.Options
                   GHC.Types.False
                   GHC.Types.False
                   Main.$fShowOptions9
                   GHC.Types.False) -}
bc60ecc3338313b5a486af86b15ef58d
  finalOptions ::
    [GHC.Base.String] -> GHC.Types.IO (Main.Options, [GHC.Base.String])
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.finalOptions1
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <(Main.Options, [GHC.Base.String])>_R)) -}
fd56901d0e78f024d2912ddcc659e9a8
  finalOptions1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Main.Options, [GHC.Base.String]) #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (argv :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Console.GetOpt.$wgetOpt'
                        @ (Main.Options -> Main.Options)
                        (System.Console.GetOpt.Permute @ (Main.Options -> Main.Options))
                        Main.options
                        argv of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 case GHC.Base.++
                        @ [GHC.Types.Char]
                        ww4
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ [GHC.Types.Char]
                           System.Console.GetOpt.errUnrec
                           ww3) of wild {
                   []
                   -> (# eta, (Main.finalOptions_go ww1 Main.defaultOptions, ww2) #)
                   : ipv ipv1 -> Main.finalOptions2 eta wild } }) -}
532bdf6001ff4828f0fa679e96cfa527
  finalOptions2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [GHC.Base.String]
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Main.Options, [GHC.Base.String]) #)
  {- Arity: 2, Strictness: <B,U><B,1*U>x -}
d22119310ac9f24373ff6badcedc2db4
  finalOptions_go ::
    [Main.Options -> Main.Options] -> Main.Options -> Main.Options
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U,U,U)> -}
d0a2ad91cd0b93a320347862abdf984e
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
ff82cfc967eb1698ac4142328ea357a1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> (GHC.Magic.noinline
                         @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                         @ ()
                         Main.main3)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv
                   : s1 opts
                   -> case Main.finalOptions1 opts ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 { (,) opts' ds ->
                      Main.main2 s1 opts' ipv2 } } } }) -}
56299b6b8d9c8851168e64b8adc6f3ad
  main2 ::
    GHC.IO.FilePath
    -> Main.Options
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,U><S(LLLS),1*U(1*U,1*U,1*U(1*U),1*U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.IO.FilePath)
                   (w1 :: Main.Options)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { Main.Options ww1 ww2 ww3 ww4 ->
                 Main.$wrunOptions w ww1 ww2 ww3 ww4 w2 }) -}
5a900baad9bb98c190b147416dfa8615
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main4) -}
3169c83b4c397aeb54c12a2e4fe38608
  main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at app/Main.hs:56:3-10"#) -}
a05d7799618885c2fa36249e0d1df5d3
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7018561aac28ae27150ccc12c6207c1b
  optAST :: Main.Options -> GHC.Types.Bool
  RecSel Left Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Options) ->
                 case ds of wild { Main.Options ds1 ds2 ds3 ds4 -> ds2 }) -}
7018561aac28ae27150ccc12c6207c1b
  optEval :: Main.Options -> GHC.Types.Int
  RecSel Left Main.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Options) ->
                 case ds of wild { Main.Options ds1 ds2 ds3 ds4 -> ds3 }) -}
7018561aac28ae27150ccc12c6207c1b
  optHelp :: Main.Options -> GHC.Types.Bool
  RecSel Left Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Options) ->
                 case ds of wild { Main.Options ds1 ds2 ds3 ds4 -> ds4 }) -}
7018561aac28ae27150ccc12c6207c1b
  optPrint :: Main.Options -> GHC.Types.Bool
  RecSel Left Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Options) ->
                 case ds of wild { Main.Options ds1 ds2 ds3 ds4 -> ds1 }) -}
50da5d5d439238e2d1b7d8f181192e84
  options ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options36
                   Main.options1) -}
e975f5de590d67464502d320e00bd2d4
  options1 ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options26
                   Main.options2) -}
b7f8b55d3c5aa5005516233d6ff5cbe1
  options10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options11) -}
163af2bc51b8dad2d7c1f7fa60cc6bb9
  options11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("help"#) -}
1f215cfb846abc0495b0bf43fa6d2723
  options12 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options13
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8a78320d39b44d2f476b5ac396bd5e8d
  options13 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'h'#) -}
ed9e55efe5e10806f70639063b3912ce
  options14 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options24
                   Main.options21
                   Main.options17
                   Main.options15) -}
dda14190f7a015107e9ff501a93bb9a9
  options15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options16) -}
116d9c0bd17e98480cc8e763cd49459d
  options16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Elegir evaluador 1, 2 o 3."#) -}
109581dc7ffef845cd44bc7ac0fe6dfb
  options17 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- Strictness: m2,
     Unfolding: (System.Console.GetOpt.ReqArg
                   @ (Main.Options -> Main.Options)
                   Main.options20
                   Main.options18) -}
db085d6fad0c9b53583a002525b54a35
  options18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options19) -}
a0135f1ce3326c298b12532150f4648f
  options19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("N_EVALUADOR"#) -}
06e4b0ca6effad630079ebab34fbdb12
  options2 ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options14
                   Main.options3) -}
d80b3cc69fae50089e6a0008df705759
  options20 :: GHC.Base.String -> Main.Options -> Main.Options
  {- Arity: 2, Strictness: <L,U><S,1*U(U,U,A,U)>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.String) (w1 :: Main.Options) ->
                 case w1 of ww { Main.Options ww1 ww2 ww3 ww4 ->
                 Main.Options
                   ww1
                   ww2
                   (case Text.Read.readEither8
                           @ GHC.Types.Int
                           (Text.ParserCombinators.ReadP.run
                              @ GHC.Types.Int
                              (GHC.Read.$fReadInt_$sreadNumber
                                 GHC.Read.$fReadInt2
                                 Text.ParserCombinators.ReadPrec.minPrec
                                 @ GHC.Types.Int
                                 (Text.Read.readEither7 @ GHC.Types.Int))
                              w) of wild {
                      []
                      -> GHC.Err.errorWithoutStackTrace
                           @ 'GHC.Types.LiftedRep
                           @ GHC.Types.Int
                           Text.Read.readEither5
                      : x ds
                      -> case ds of wild1 {
                           [] -> x
                           : ipv ipv1
                           -> GHC.Err.errorWithoutStackTrace
                                @ 'GHC.Types.LiftedRep
                                @ GHC.Types.Int
                                Text.Read.readEither2 } })
                   ww4 }) -}
8042d22bd1af5d81ee16b92ea261cd7c
  options21 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options22
                   (GHC.Types.[] @ GHC.Base.String)) -}
59050390523106fc5a1ddd811e5286ab
  options22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options23) -}
b9cb0dc59078cd575d9f8d8866f02e57
  options23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("evaluator"#) -}
98f800c3039c3f4f24b2abe73b451c71
  options24 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options25
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ac58d4013bc017f8f9c249992d6c17e9
  options25 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
f5feef22101b9582980559c8139a6049
  options26 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options34
                   Main.options31
                   Main.options29
                   Main.options27) -}
126c85c020eecf960f35a752c33e3086
  options27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options28) -}
95a36f81239450f4de77d82e42d18157
  options28 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Mostrar el AST del programa de entrada."#) -}
958bb0288c98822813e665184875a7c2
  options29 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Main.Options -> Main.Options)
                   Main.options30) -}
362323dee5c9a3402a6ca5ca02d29b6a
  options3 ::
    [System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr (Main.Options -> Main.Options))
                   Main.options4
                   (GHC.Types.[]
                      @ (System.Console.GetOpt.OptDescr
                           (Main.Options -> Main.Options)))) -}
22067a03429cecf9797aa3da1df3a97e
  options30 :: Main.Options -> Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,A,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Main.Options) ->
                 case opts of wild { Main.Options ds ds1 ds2 ds3 ->
                 Main.Options ds GHC.Types.True ds2 ds3 }) -}
59f78d968987854880171b7a926e0133
  options31 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options32
                   (GHC.Types.[] @ GHC.Base.String)) -}
fcbadd5a39c916dcdbf146cace05181c
  options32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options33) -}
e1d45f7a55cbf2642f6d983dc25e4109
  options33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AST"#) -}
29437b1d59562e6cf1548e7e662883f4
  options34 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options35
                   (GHC.Types.[] @ GHC.Types.Char)) -}
744bd88efddb255cd531160945668824
  options35 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'a'#) -}
eb1b796fecd7085a0b94577261841e8d
  options36 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options44
                   Main.options41
                   Main.options39
                   Main.options37) -}
3a6cd1c38e609d0691c9093b78475917
  options37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options38) -}
93351f3c116ca1ee52d2b56532c126ae
  options38 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Imprimir el programa de entrada."#) -}
b00b31e17d304cd3a2a282086b9ae1ba
  options39 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Main.Options -> Main.Options)
                   Main.options40) -}
cdbbe0777a4a23b5a386f92189bbdbc9
  options4 ::
    System.Console.GetOpt.OptDescr (Main.Options -> Main.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Main.Options -> Main.Options)
                   Main.options12
                   Main.options9
                   Main.options7
                   Main.options5) -}
de59af7a4f7e93778f23134d6c7d2ad9
  options40 :: Main.Options -> Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(A,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Main.Options) ->
                 case opts of wild { Main.Options ds ds1 ds2 ds3 ->
                 Main.Options GHC.Types.True ds1 ds2 ds3 }) -}
deeb4e125f4265c5bd46b9cbbadf21c0
  options41 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options42
                   (GHC.Types.[] @ GHC.Base.String)) -}
bce51b193bf20c0fb76b6140d8c04adc
  options42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options43) -}
01e5b76724f303da9da7b0dbc4909749
  options43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("print"#) -}
d34b842b5606613ceaaa26e56e25b872
  options44 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options45
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4a286c85bdadc4d831e88ddc029edc21
  options45 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'p'#) -}
a5273893531e7954236bb59e91a6f52c
  options5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options6) -}
838883601aaf681efb0f0953b638a903
  options6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Imprimir guia de uso."#) -}
424f04850776710ca4a7352d61c124d7
  options7 ::
    System.Console.GetOpt.ArgDescr (Main.Options -> Main.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Main.Options -> Main.Options)
                   Main.options8) -}
5899796fc9c320754850c693b03d37ea
  options8 :: Main.Options -> Main.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Main.Options) ->
                 case opts of wild { Main.Options ds ds1 ds2 ds3 ->
                 Main.Options ds ds1 ds2 GHC.Types.True }) -}
c350ef592ecd7ba12da94ff9a789ae49
  options9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options10
                   (GHC.Types.[] @ GHC.Base.String)) -}
b6897024b85112ff8e1fd8860c848ccb
  runOptions :: GHC.IO.FilePath -> Main.Options -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <L,U><S(LLLS),1*U(1*U,1*U,1*U(1*U),1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R <Main.Options>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
instance GHC.Show.Show [Main.Options] = Main.$fShowOptions
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

