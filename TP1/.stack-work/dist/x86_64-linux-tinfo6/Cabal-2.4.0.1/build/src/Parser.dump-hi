
==================== FINAL INTERFACE ====================
2023-09-19 21:41:15.102207791 UTC

interface TP1-0.1.0.0-4KwBlKAgtBNFj4YFqhKSAq:Parser 8064
  interface hash: 1a7458a3cd33a8109152a4c3d6774c79
  ABI hash: e0de58886b7e38060812acb6d5ca2f81
  export-list hash: d64c1902b01f47dfa1282f02f7805980
  orphan hash: 30bcec34d3aec01c8e7e5149c169be81
  flag hash: b464be464d1bf7181b90b9e208309b5b
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parser.bVal
  Parser.boolexp
  Parser.boolfactor
  Parser.boolterm
  Parser.comm
  Parser.commterm
  Parser.ifThenElse
  Parser.intexp
  Parser.intfactor
  Parser.intterm
  Parser.lis
  Parser.opAnd
  Parser.opCompare
  Parser.opOr
  Parser.opPlusMin
  Parser.opTimesDiv
  Parser.opcomm
  Parser.parseComm
  Parser.repeatUntil
  Parser.totParser
module dependencies: AST
package dependencies: array-0.5.3.0 base-4.12.0.0* binary-0.8.6.0
                      bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      ghc-prim-0.5.3 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0*
                      text-1.2.3.1 transformers-0.5.6.2
orphans: text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
import  -/  AST 7cd4eded584bb284b00c21174b1fbd55
  exports: 38ad0293da0298a278760f1e58807521
  And 97fb649ce80c6d0a7d7bd7ce50a4d2b8
  BTrue 075bea2f9d7a2a9047ecb0a106b3b344
  Comm 111212fc3add40a8601b31ad2144c56d
  Const 2dc9ec1f34994154087dbb937936bfec
  Div b76c5c0007e1edcc8247c2901999c348
  Eq 42fb8260f3f49e6daced82d4ded9ab4a
  Exp e61902d66b86f620aebeddf357ccccb5
  Gt 106cfe52f94b738396f2e44b70c45750
  IfThen 4327f54ffe36f9c88d59a779e8350548
  IfThenElse 4bd566072514db0a45c911534547016d
  Let b5cbba94ad258bbb9d7b343cec52b5ee
  Lt ce3ce79873fbb01351ae669c8138edb4
  Minus 592a11f13e7ecf300cc8032524c32b0e
  NEq edfe34974fc433a64e263305a14c2f38
  Not 896417f3866a6ec15f0f5495a3cafddc
  Or 62c296d85d29cd1b3ed9fecf05999d4c
  Plus 03179fc4b68914340fe7cec3003c83d0
  Repeat 7c7b1e7b973e788156884d888fb75f62
  Seq 807e32a23569f58202ece0e4f5036b53
  Times d607cb3ed165c77a525b47dd5939d58f
  UMinus 3375c7098f67699cb0db9c7d8a707360
  Var 904f3c614a2ba9033168c3d4800ba563
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  parsec-3.1.13.0:Text.Parsec.Char 1d8df71bb2b87b4def23a6d70fcf626e
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator 01430d0f4d5d1a91d107287a8570c77b
import  -/  parsec-3.1.13.0:Text.Parsec.Error 8749219b5253c3d6e567349f0ed9b7ff
import  -/  parsec-3.1.13.0:Text.Parsec.Language eb1bbe64db0025369d45ba4b9038017b
import  -/  parsec-3.1.13.0:Text.Parsec.Pos 756899f622bfc409fff5dc705103a597
import  -/  parsec-3.1.13.0:Text.Parsec.Prim e10357088eb166ae1ba7004db3ca9a57
import  -/  parsec-3.1.13.0:Text.Parsec.String 5ce7ec27a5dc9dcd8333d077aef63929
import  -/  parsec-3.1.13.0:Text.Parsec.Token d01a7a058de5348aa7a0e0166b262b41
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec 046948eecffd56e861d62e028c327cbf
03705ac6f0e6e6194a5bc307a66101d7
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
45013657f8dbf68e19d5d7d7915500e5
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Maybe.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Maybe.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Maybe.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Maybe.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Maybe.Maybe (tok, [tok])>_R)) }) -}
8658dbb840a2876af2563f3e6da34f2a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Parser.$trModule3
                   Parser.$trModule1) -}
5f573b536e1a98ca0e964f2186f8ba7d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Parser.$trModule2) -}
d6caf07e45e71fb40c4edec551216bec
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Parser"#) -}
ce7aebf6ca80ecd745aecf3be8ce52a8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Parser.$trModule4) -}
9e9f6abf584a2afbef32ec9daba66d3c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("TP1-0.1.0.0-4KwBlKAgtBNFj4YFqhKSAq"#) -}
39eae9fb9f1829a2d8e156a35e417345
  bVal ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.bVal1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
71231ea180adaab5723404e9eb4d0f09
  bVal1 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (cok :: AST.Exp GHC.Types.Bool
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: AST.Exp GHC.Types.Bool
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   (Parser.bVal6 @ u)
                   (Parser.bVal5 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ u
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (AST.Exp GHC.Types.Bool)
                      (Parser.bVal2 @ u)
                      (Parser.bVal5 @ u)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <u>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Bool>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: AST.Exp GHC.Types.Bool)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
8360e6325ade65498336299a63ee3ec2
  bVal2 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.bVal3 }) -}
04d5571731e21aeffc408b6080857302
  bVal3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.bVal4) -}
29582a2d591242325d5a46cfce3202dd
  bVal4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("false"#) -}
63acafb77545fec88a0e68853413f178
  bVal5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: AST.Exp GHC.Types.Bool
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WBTrue
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
14170971d15276cf5e8a6732ff956acf
  bVal6 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis61 }) -}
4b0cd4ac20dfcd1cf6f242cb8515401c
  boolexp :: Text.Parsec.String.Parser (AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
e0166516f15913d1c31312dd0c7af55a
  boolexp1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   Parser.boolexp5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   (Parser.boolexp2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
d255d79d8b96323c73c92acfc120ab4f
  boolexp2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Bool
                      -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                   (Parser.boolexp4 @ u)
                   (Parser.boolexp3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))) -}
945bb020a0329a56a9e19d34c1d18dff
  boolexp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Bool
                            -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WOr
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
e017ca546ba01d5a3c7dbd6399c853b5
  boolexp4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis28 }) -}
4c55544a0234c8f8b604feae452cb829
  boolexp5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   Parser.boolexp9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   (Parser.boolexp6 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
6cf69bb0c3f06a4d05fb8da2abdbb9d9
  boolexp6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Bool
                      -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                   (Parser.boolexp8 @ u)
                   (Parser.boolexp7 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))) -}
f5ce1ec0c6ebf8d3e76572d298014f21
  boolexp7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Bool
                            -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WAnd
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
289ec65f7f09fa5dacb3939731ebe1d4
  boolexp8 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis30 }) -}
6bba33ccba6869b969776c3233fd6cb8
  boolexp9 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7d9435cf8fac00eeabba5dee9648c798
  boolfactor ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp9
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
5d451015aae7f69a1c84ef0aa7f3a9e4
  boolterm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
0835c211fcf9e1dba4f7834418f3fc68
  comm :: Text.Parsec.String.Parser AST.Comm
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.comm1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
16fa355a66a7dc2aaf6f0ed44a9f47e9
  comm1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Comm
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Comm
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ AST.Comm
                   Parser.comm5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))
                   (Parser.comm2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm -> AST.Comm -> AST.Comm>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
0d3c32caff69d07433f1f218926a630c
  comm2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Comm -> AST.Comm -> AST.Comm)
                   (Parser.comm4 @ u)
                   (Parser.comm3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm -> AST.Comm -> AST.Comm>_R))) -}
0fc18a881d01482e626eeccdf6c034bd
  comm3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Comm -> AST.Comm -> AST.Comm)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Comm -> AST.Comm -> AST.Comm)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.Seq
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
5bbf201546380abbddf0af3e8c106358
  comm4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis18 }) -}
166b0fa49bc6eee74e76806db342cf9f
  comm5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7bf1390477783ffe031f165459ec796c
  commterm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity AST.Comm
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.comm5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
2fc55579e4857a84d87ecb943d86b0a7
  ifThenElse ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity AST.Comm
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.ifThenElse1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
bf9bdfae91cbbddfa30b3b9dd49f52ab
  ifThenElse1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ AST.Comm
                   Parser.ifThenElse4
                   Parser.ifThenElse2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))) -}
5efa8ad73b9d80725f30e4bfe4bfdb4e
  ifThenElse2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   Parser.boolexp5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   (Parser.boolexp2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                   @ b1
                   s1
                   (\ (x :: AST.Exp GHC.Types.Bool)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.ifThenElse3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: AST.Exp GHC.Types.Bool)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.ifThenElse3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
1491fcf36cb1ba73b0830642d544f929
  ifThenElse3 ::
    AST.Exp GHC.Types.Bool
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
12210d9513da32cabce2c169cbdbc99a
  ifThenElse4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis59 }) -}
1c76195066102c03acf399a969798b2b
  intexp :: Text.Parsec.String.Parser (AST.Exp GHC.Types.Int)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
5876b32c0afb13d1a5d4715749793d70
  intexp1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Int)
                   Parser.intexp7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int>_R))
                   (Parser.intexp2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
91413a38b7623d5940897f303f7e44b6
  intexp10 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis36 }) -}
3dd5de9d3a7b72fda512571e376eabcc
  intexp11 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WTimes
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
e3a73a5aabdde5f338020fb99a18b943
  intexp12 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis38 }) -}
a9cb96e3cf185d8e7f8b5427d07ae4e2
  intexp13 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
a4fc14161548fabdd1bfd57c211c6db3
  intexp2 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (cok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Int
                      -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                   (Parser.intexp6 @ u)
                   (Parser.intexp5 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ u
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (AST.Exp GHC.Types.Int
                         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                      (Parser.intexp4 @ u)
                      (Parser.intexp3 @ u)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <u>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Int
                                 -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: AST.Exp GHC.Types.Int
                               -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
65230087b7d64aaf224b1a9d9d5990b4
  intexp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WMinus
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
fe29ea09e885cd64370fa589a3a0acf9
  intexp4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis40 }) -}
7cc5deae0d1df396d805ff583c3a78a1
  intexp5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WPlus
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
8ab987c3d00ae9848101dc42e6294436
  intexp6 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis42 }) -}
f7edd8b85ce854ca7b0311d26d76278e
  intexp7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Int)
                   Parser.intexp13
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int>_R))
                   (Parser.intexp8 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
2d7857efeb4dbccecbd02c28738701e0
  intexp8 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (cok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Int
                      -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                   (Parser.intexp12 @ u)
                   (Parser.intexp11 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ u
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (AST.Exp GHC.Types.Int
                         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                      (Parser.intexp10 @ u)
                      (Parser.intexp9 @ u)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <u>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Int
                                 -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: AST.Exp GHC.Types.Int
                               -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
e0f4c3b2f0b8c8754fca1f35ffd02bcb
  intexp9 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WDiv
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
cd782083d467a036e57eabccece872e5
  intfactor ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp13
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
caf291bbc34aea6536c249152d4d6c63
  intterm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp7
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
1cfd41a90f84d94509c122d4db63a243
  lis :: Text.Parsec.Token.TokenParser u
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Token.makeTokenParser
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   (Parser.lis1 @ u)) -}
554fc3a43ff6cd0c238e9cb73308a3eb
  lis1 ::
    Text.Parsec.Token.GenLanguageDef
      GHC.Base.String u Data.Functor.Identity.Identity
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Token.LanguageDef
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   Parser.lis69
                   Parser.lis67
                   Parser.lis65
                   GHC.Types.True
                   (Text.Parsec.Language.emptyDef7 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.emptyDef4 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.emptyDef1 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Parser.lis63 @ u)
                   Parser.lis44
                   Parser.lis2
                   GHC.Types.True) -}
b6e84ae9ba2a56d9dc8b61f116b80a7b
  lis10 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis26
                   Parser.lis11) -}
abbf20c9ed22bc669f59870c7666deb7
  lis11 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis24
                   Parser.lis12) -}
dfff66ec97dc987deec3aaa4330900af
  lis12 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis22
                   Parser.lis13) -}
6358fc24fe8e906c049bedf4795ed398
  lis13 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis20
                   Parser.lis14) -}
8e4b26ea90ec15e64203d646837f3313
  lis14 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis18
                   Parser.lis15) -}
f81c7d2678132374e140e8b898b44963
  lis15 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis16
                   (GHC.Types.[] @ GHC.Base.String)) -}
8b63258d4bee10194045cd7ebc3c3e5c
  lis16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis17) -}
e6ca46351fb710eb31ea3acfa263f3df
  lis17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (","#) -}
e08f88239d17e50500b20c589a442e23
  lis18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis19) -}
829a5fbf68bef924f7555f4291bab074
  lis19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (";"#) -}
eebf5571b608229d87a0fe86ac5d879b
  lis2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis42
                   Parser.lis3) -}
77af78e6f2fde1c1885a18096e1c67c1
  lis20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis21) -}
6f682f5c1a4bdac1a63c3564ab1d2d97
  lis21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!="#) -}
64a67e1f14bf1d55fea9b983ea25f22f
  lis22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis23) -}
834895896da315803734bae37a2ef0cf
  lis23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=="#) -}
4c2ac25dba9b9b7769f9d7025242dc2b
  lis24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis25) -}
12c9c46be28900c670c9f290b775e3fe
  lis25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("="#) -}
a5b3ecebf941fe2d0694bca9f0d1286c
  lis26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis27) -}
65639541b565be480fed42ddf7fbbc9e
  lis27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!"#) -}
23b96ebd4996cefb8b802864c64640ce
  lis28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis29) -}
c3d10efb23be59541618eb827184a53c
  lis29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("||"#) -}
e61b9bdc8293172d818dbd538acdb37b
  lis3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis40
                   Parser.lis4) -}
de7cabac6dfc781eaeabb44d0f6bfdc8
  lis30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis31) -}
5c88707ca02e3639f7fd431d768a7af3
  lis31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("&&"#) -}
11ebe6738c81cd3217add0ca2aed3e63
  lis32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis33) -}
3215b40b1e0b380b420a980364d9c6a2
  lis33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
d527fee0d3003790365ddde22efaa068
  lis34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis35) -}
bf57a2a58fe596abd3f7ead655e31ac4
  lis35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
132f73f4a91909d9c0b8615ffe1151b3
  lis36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis37) -}
cdbd04419fc7b0df36d8de6eafd14375
  lis37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
f222edf9e752442bd3ba59dfa65e53a1
  lis38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis39) -}
9961fb99ce707f26a82ea9d752ad4448
  lis39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
57f5c1b1b4bf5aa68ca7b775dcc84bea
  lis4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis38
                   Parser.lis5) -}
a6af701766800892f234322cb8c2b503
  lis40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis41) -}
7c69b357f4cf4d5d67d43c4005017bb1
  lis41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
b36bc880b8677cefdeee3ec5ad661b60
  lis42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis43) -}
f26ff256af9e5af2e927870e4b522feb
  lis43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+"#) -}
0e8f7878019934d4460c1b823d7e1fa6
  lis44 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis61
                   Parser.lis45) -}
449acb39bfd8af6eb525bf914ab8a39b
  lis45 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.bVal3
                   Parser.lis46) -}
2781f6592f5a62458449d0d714479af2
  lis46 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis59
                   Parser.lis47) -}
4edbf0883b6a6b8010a73ce32f8cd8ea
  lis47 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis57
                   Parser.lis48) -}
27e1f3e9c3efcfaa38b87d5df846286a
  lis48 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis55
                   Parser.lis49) -}
f0a8b48f8e19c0852e6568b317bdf279
  lis49 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis53
                   Parser.lis50) -}
0f256252c646c9cad6c1e2f6d66c7ef5
  lis5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis36
                   Parser.lis6) -}
30afd736ad04a27e51f68db03291df0b
  lis50 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis51
                   (GHC.Types.[] @ GHC.Base.String)) -}
b88199515010df59cbb3dec42876752b
  lis51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis52) -}
32762a73b7245e7693347e7227f46b1a
  lis52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("until"#) -}
10f31cdfdfbd26a910eb080bfbd2ed92
  lis53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis54) -}
cf7c47e59b828b06d8234b30785ee9cb
  lis54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("skip"#) -}
2154fd4595791258a8e58708ca5b4250
  lis55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis56) -}
407912e3cdefbf367f53ebd521b826c8
  lis56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("repeat"#) -}
4a8ab7279e52e1710e73aaa71d6bf23a
  lis57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis58) -}
14e759e2b89d4fbec3a92a809156a909
  lis58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
5214b4d0f677b39cc0054611dcd41eee
  lis59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis60) -}
a3abf7a955da21132f581d2084210916
  lis6 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis34
                   Parser.lis7) -}
c0311326ca23caa882bbf1944692ae02
  lis60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("if"#) -}
ec6ee84cdcc66076502030d8dd5638a4
  lis61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis62) -}
ca8ea3d9dc9cdd0af8e681c904f2d303
  lis62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("true"#) -}
11d7909c155ff56c580d25a0c08409f8
  lis63 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.lis64) -}
74b5017303883e18765325ca53e88913
  lis64 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '='#) -}
8cfef063e842a0db17e26f0c933b46c4
  lis65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis66) -}
37129e3377072682e0fbc983ecdbb9ac
  lis66 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("//"#) -}
2ea0d912d85d917a22b6c32278656fa8
  lis67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis68) -}
a736c30b9e5e87bcd5e423101300a024
  lis68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*/"#) -}
1cc8e13d01068e033378d90e3730764d
  lis69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis70) -}
e7410157a46befbb6cdd7a415db05973
  lis7 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis32
                   Parser.lis8) -}
0b87fe7c7843d00cc8b9c27124e2abea
  lis70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/*"#) -}
610f6b77f9ac7e6d897bb64833e947e8
  lis8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis30
                   Parser.lis9) -}
ad9f0a1901c5bc067fd6772350deba8f
  lis9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis28
                   Parser.lis10) -}
6399c5470ec219a6a92a1b7d2118b915
  opAnd ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool
       -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp6
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R)) -}
5668e2b141d5ce0c3bb40aeb1ba75b85
  opCompare ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.opCompare1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool>_R)) -}
f8403c4e68ebc3b9ef8e325db29ca533
  opCompare1 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1935cf295a1dcba852986d0d08ae1cff
  opOr ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool
       -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp2
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R)) -}
e2f874e3beaa763ea1c869fa5e08da60
  opPlusMin ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp2
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R)) -}
6210cc1e2fea8351130dcbc8811c1c5a
  opTimesDiv ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp8
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R)) -}
34cbc5bf872da09ae449003c34238ad8
  opcomm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Comm -> AST.Comm -> AST.Comm)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.comm2
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm -> AST.Comm -> AST.Comm>_R)) -}
f8542c6abfc4c7dda189c6b221bd0db3
  parseComm ::
    Text.Parsec.Pos.SourceName
    -> GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError AST.Comm
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.parseComm1
                  `cast`
                (<Text.Parsec.Pos.SourceName>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError AST.Comm>_R) -}
588af6091e59a0fb915f5f8fc8e9d0b9
  parseComm1 ::
    Text.Parsec.Pos.SourceName
    -> GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError AST.Comm)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (name :: Text.Parsec.Pos.SourceName)
                   (s1 :: GHC.Base.String) ->
                 case (Parser.parseComm6
                         @ AST.Comm
                         Parser.comm1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <GHC.Base.String>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <AST.Comm>_R))
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm)))
                         (Text.Parsec.Prim.State
                            @ GHC.Base.String
                            @ ()
                            s1
                            (Text.Parsec.Pos.SourcePos name 1# 1#)
                            GHC.Tuple.())
                         Parser.parseComm5
                           `cast`
                         (<AST.Comm>_R
                          ->_R <Text.Parsec.Prim.State GHC.Base.String ()>_R
                          ->_R <Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () AST.Comm))>_R))
                         Parser.parseComm4
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () AST.Comm))>_R))
                         Parser.parseComm3
                         Parser.parseComm2
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () AST.Comm))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))>_R) of wild {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R) of wild1 {
                        Text.Parsec.Prim.Ok x ds ds1
                        -> (Data.Either.Right @ Text.Parsec.Error.ParseError @ AST.Comm x)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either Text.Parsec.Error.ParseError AST.Comm>_R))
                        Text.Parsec.Prim.Error err
                        -> (Data.Either.Left @ Text.Parsec.Error.ParseError @ AST.Comm err)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        Text.Parsec.Error.ParseError AST.Comm>_R)) }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R) of wild1 {
                        Text.Parsec.Prim.Ok x ds ds1
                        -> (Data.Either.Right @ Text.Parsec.Error.ParseError @ AST.Comm x)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either Text.Parsec.Error.ParseError AST.Comm>_R))
                        Text.Parsec.Prim.Error err
                        -> (Data.Either.Left @ Text.Parsec.Error.ParseError @ AST.Comm err)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        Text.Parsec.Error.ParseError AST.Comm>_R)) } }) -}
a806fb717be4f800496cb03928f0eb17
  parseComm2 ::
    Text.Parsec.Error.ParseError
    -> Text.Parsec.Prim.Consumed
         (Data.Functor.Identity.Identity
            (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: (\ (err :: Text.Parsec.Error.ParseError) ->
                 Text.Parsec.Prim.Empty
                   @ (Data.Functor.Identity.Identity
                        (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                   (Text.Parsec.Prim.Error @ GHC.Base.String @ () @ AST.Comm err)
                     `cast`
                   (Sym (Data.Functor.Identity.N:Identity[0]
                             <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R))) -}
62bc2316b309b2d06d0ed53642aee92c
  parseComm3 ::
    AST.Comm
    -> Text.Parsec.Prim.State GHC.Base.String ()
    -> Text.Parsec.Error.ParseError
    -> Data.Functor.Identity.Identity
         (Text.Parsec.Prim.Consumed
            (Data.Functor.Identity.Identity
               (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm)))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LSS),1*U(U,U,U)><L,U>m2,
     Unfolding: (\ (a1 :: AST.Comm)
                   (s' :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                   (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                 case s' of dt { Text.Parsec.Prim.State ipv ipv1 ipv2 ->
                 (Text.Parsec.Prim.Empty
                    @ (Data.Functor.Identity.Identity
                         (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                    (Text.Parsec.Prim.Ok @ GHC.Base.String @ () @ AST.Comm a1 dt err)
                      `cast`
                    (Sym (Data.Functor.Identity.N:Identity[0]
                              <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R)))
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))>_R)) }) -}
dd17104f72a4e5187047cde2d323dd1f
  parseComm4 ::
    Text.Parsec.Error.ParseError
    -> Text.Parsec.Prim.Consumed
         (Data.Functor.Identity.Identity
            (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: (\ (err :: Text.Parsec.Error.ParseError) ->
                 Text.Parsec.Prim.Consumed
                   @ (Data.Functor.Identity.Identity
                        (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                   (Text.Parsec.Prim.Error @ GHC.Base.String @ () @ AST.Comm err)
                     `cast`
                   (Sym (Data.Functor.Identity.N:Identity[0]
                             <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R))) -}
c027454c88bb0b5b4c7ae3624c11af19
  parseComm5 ::
    AST.Comm
    -> Text.Parsec.Prim.State GHC.Base.String ()
    -> Text.Parsec.Error.ParseError
    -> Text.Parsec.Prim.Consumed
         (Data.Functor.Identity.Identity
            (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*U(U,U,U)><L,U>m1,
     Unfolding: (\ (a1 :: AST.Comm)
                   (s' :: Text.Parsec.Prim.State GHC.Base.String ())
                   (err :: Text.Parsec.Error.ParseError) ->
                 Text.Parsec.Prim.Consumed
                   @ (Data.Functor.Identity.Identity
                        (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                   (case s' of dt { Text.Parsec.Prim.State ipv ipv1 ipv2 ->
                    (Text.Parsec.Prim.Ok @ GHC.Base.String @ () @ AST.Comm a1 dt err)
                      `cast`
                    (Sym (Data.Functor.Identity.N:Identity[0]
                              <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R)) })) -}
8e21acfa78957c78e02b946a5c59789e
  parseComm6 ::
    Text.Parsec.String.Parser a
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
ae3565d928f6333ca003dd547ea0e60a
  repeatUntil ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity AST.Comm
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.repeatUntil1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
ef439c2a1049f9b43905648754a666f3
  repeatUntil1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ AST.Comm
                   Parser.repeatUntil5
                   Parser.repeatUntil2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))) -}
a47b2feea8166386f722b18f7159ba79
  repeatUntil2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ AST.Comm
                   Parser.comm5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))
                   (Parser.comm2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm -> AST.Comm -> AST.Comm>_R))
                   @ b1
                   s1
                   (\ (x :: AST.Comm)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.repeatUntil3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: AST.Comm)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.repeatUntil3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
fab88df05aac4e7367424a443f395b7b
  repeatUntil3 ::
    AST.Comm
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (c :: AST.Comm)
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: AST.Comm
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: AST.Comm
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ AST.Comm
                   Parser.repeatUntil4
                   (\ @ b2
                      (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (cok :: AST.Comm
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b2)[OneShot]
                      (cerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b2)[OneShot]
                      (eok :: AST.Comm
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b2)[OneShot]
                      (eerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b2)[OneShot] ->
                    Text.Parsec.Combinator.$wchainl1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ GHC.Types.Char
                      @ ()
                      @ (AST.Exp GHC.Types.Bool)
                      Parser.boolexp5
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <GHC.Base.String>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Bool>_R))
                      (Parser.boolexp2 @ ())
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Bool
                                 -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                      @ b2
                      s1
                      (\ (x :: AST.Exp GHC.Types.Bool)
                         (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok
                         (AST.Repeat c x)
                         s2
                         (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                          case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                          case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww4
                                 ww5
                                 ww6
                                 ww2
                                 ww11
                                 ww12
                                 ww13
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                          Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                      cerr
                      (\ (x :: AST.Exp GHC.Types.Bool)
                         (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok
                         (AST.Repeat c x)
                         s2
                         (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                          case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                          case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww4
                                 ww5
                                 ww6
                                 ww2
                                 ww11
                                 ww12
                                 ww13
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                          Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                      eerr)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))
                   @ b1
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
92ca9889ac682e367fff0aedd0dbe427
  repeatUntil4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis51 }) -}
81c7715ef873b624543c68f910affc77
  repeatUntil5 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis55 }) -}
1b7584f6f4cfaeb5bd8bb807e22331a5
  totParser ::
    Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.parseComm6
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.String.Parser a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
"SPEC/Parser $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                          (v :: GHC.Base.Monad
                                                                  Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = Parser.$s$fStream[]mtok @ tok
"SPEC/Parser $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

