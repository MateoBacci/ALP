
==================== FINAL INTERFACE ====================
2023-09-26 21:05:44.687850184 UTC

interface TP1-0.1.0.0-4KwBlKAgtBNFj4YFqhKSAq:Parser 8064
  interface hash: 32a1217eabe7192979424ec8af326959
  ABI hash: a01bcc3232298ae464531f62506b65c4
  export-list hash: 145438e666d4f748bda67811799375fb
  orphan hash: 30bcec34d3aec01c8e7e5149c169be81
  flag hash: b464be464d1bf7181b90b9e208309b5b
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parser.bVal
  Parser.boolexp
  Parser.boolfactor
  Parser.boolterm
  Parser.comm
  Parser.commterm
  Parser.ifThenElse
  Parser.intassgn
  Parser.intexp
  Parser.intfactor
  Parser.intplusmin
  Parser.intterm
  Parser.lis
  Parser.opAnd
  Parser.opCompare
  Parser.opOr
  Parser.opPlusMin
  Parser.opSeq
  Parser.opTimesDiv
  Parser.opcomm
  Parser.parseComm
  Parser.repeatUntil
  Parser.totParser
module dependencies: AST
package dependencies: array-0.5.3.0 base-4.12.0.0* binary-0.8.6.0
                      bytestring-0.10.8.2 containers-0.6.0.1 deepseq-1.4.4.0
                      ghc-prim-0.5.3 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0
                      text-1.2.3.1 transformers-0.5.6.2
orphans: text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
import  -/  AST 7cd4eded584bb284b00c21174b1fbd55
  exports: 38ad0293da0298a278760f1e58807521
  And 97fb649ce80c6d0a7d7bd7ce50a4d2b8
  BTrue 075bea2f9d7a2a9047ecb0a106b3b344
  Comm 111212fc3add40a8601b31ad2144c56d
  Const 2dc9ec1f34994154087dbb937936bfec
  Div b76c5c0007e1edcc8247c2901999c348
  EAssgn 673c420368f3a5ece70822c67439dcbb
  ESeq 30ba28c6d80077252f7f82efa0c7393e
  Eq 42fb8260f3f49e6daced82d4ded9ab4a
  Exp e61902d66b86f620aebeddf357ccccb5
  Gt 106cfe52f94b738396f2e44b70c45750
  IfThen 4327f54ffe36f9c88d59a779e8350548
  IfThenElse 4bd566072514db0a45c911534547016d
  Let b5cbba94ad258bbb9d7b343cec52b5ee
  Lt ce3ce79873fbb01351ae669c8138edb4
  Minus 592a11f13e7ecf300cc8032524c32b0e
  NEq edfe34974fc433a64e263305a14c2f38
  Not 896417f3866a6ec15f0f5495a3cafddc
  Or 62c296d85d29cd1b3ed9fecf05999d4c
  Plus 03179fc4b68914340fe7cec3003c83d0
  Repeat 7c7b1e7b973e788156884d888fb75f62
  Seq 807e32a23569f58202ece0e4f5036b53
  Times d607cb3ed165c77a525b47dd5939d58f
  UMinus 3375c7098f67699cb0db9c7d8a707360
  Var 904f3c614a2ba9033168c3d4800ba563
import  -/  base-4.12.0.0:Data.Either 423bee738f25e5ee983d072216009be8
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Num c2039f03637c68f47b0bbff4c18ec616
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  parsec-3.1.13.0:Text.Parsec.Char 1d8df71bb2b87b4def23a6d70fcf626e
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator 01430d0f4d5d1a91d107287a8570c77b
import  -/  parsec-3.1.13.0:Text.Parsec.Error 8749219b5253c3d6e567349f0ed9b7ff
import  -/  parsec-3.1.13.0:Text.Parsec.Language eb1bbe64db0025369d45ba4b9038017b
import  -/  parsec-3.1.13.0:Text.Parsec.Pos 756899f622bfc409fff5dc705103a597
import  -/  parsec-3.1.13.0:Text.Parsec.Prim e10357088eb166ae1ba7004db3ca9a57
import  -/  parsec-3.1.13.0:Text.Parsec.String 5ce7ec27a5dc9dcd8333d077aef63929
import  -/  parsec-3.1.13.0:Text.Parsec.Token d01a7a058de5348aa7a0e0166b262b41
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec 046948eecffd56e861d62e028c327cbf
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec.Prim 16db6fe2b46784cc3b7e7509aa13d23b
03705ac6f0e6e6194a5bc307a66101d7
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
45013657f8dbf68e19d5d7d7915500e5
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Maybe.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Maybe.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Maybe.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Maybe.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Maybe.Maybe (tok, [tok])>_R)) }) -}
8658dbb840a2876af2563f3e6da34f2a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Parser.$trModule3
                   Parser.$trModule1) -}
5f573b536e1a98ca0e964f2186f8ba7d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Parser.$trModule2) -}
d6caf07e45e71fb40c4edec551216bec
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Parser"#) -}
ce7aebf6ca80ecd745aecf3be8ce52a8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Parser.$trModule4) -}
9e9f6abf584a2afbef32ec9daba66d3c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("TP1-0.1.0.0-4KwBlKAgtBNFj4YFqhKSAq"#) -}
39998fbbef6c7faa555af544cbc5e5ef
  bVal ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.bVal1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
9d294bfaf0ca2b414c92708f9f5894e4
  bVal1 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (cok :: AST.Exp GHC.Types.Bool
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: AST.Exp GHC.Types.Bool
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   (Parser.bVal6 @ u)
                   (Parser.bVal5 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ u
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (AST.Exp GHC.Types.Bool)
                      (Parser.bVal2 @ u)
                      (Parser.bVal5 @ u)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <u>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Bool>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: AST.Exp GHC.Types.Bool)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
72ed47a1f4544bafb59fec1e63f1e765
  bVal2 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.bVal3 }) -}
04d5571731e21aeffc408b6080857302
  bVal3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.bVal4) -}
29582a2d591242325d5a46cfce3202dd
  bVal4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("false"#) -}
63acafb77545fec88a0e68853413f178
  bVal5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: AST.Exp GHC.Types.Bool
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WBTrue
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
363acad4ed7ee7947ff2dba026faa9f0
  bVal6 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis64 }) -}
188654160ef12096a8459b431249fa31
  boolexp :: Text.Parsec.String.Parser (AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
7ee2b44e9f5fbcc8acc34f8a4f7f23c5
  boolexp1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   Parser.boolexp5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   (Parser.boolexp2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
d360acb2a0907c6705e45e3c24f464e4
  boolexp2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Bool
                      -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                   (Parser.boolexp4 @ u)
                   (Parser.boolexp3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))) -}
945bb020a0329a56a9e19d34c1d18dff
  boolexp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Bool
                            -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WOr
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
43e1d7799293b2af5e9769b78ae52e2a
  boolexp4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis28 }) -}
0db18bf06da94eb2d6458c88f8202d73
  boolexp5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Bool
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   Parser.boolexp9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   (Parser.boolexp6 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
1182cde9f8e95d152400f50b96498a25
  boolexp6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Bool
                      -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                   (Parser.boolexp8 @ u)
                   (Parser.boolexp7 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))) -}
f5ce1ec0c6ebf8d3e76572d298014f21
  boolexp7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Bool
         -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Bool
                            -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WAnd
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
a4585a9b0c78c2a7e9394e41549bba16
  boolexp8 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis30 }) -}
6bba33ccba6869b969776c3233fd6cb8
  boolexp9 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Bool
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7d9435cf8fac00eeabba5dee9648c798
  boolfactor ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp9
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
9b8d224303f935c4cb74c2c3ea4dd0c2
  boolterm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool>_R)) -}
35ac6729c620b869990aecc0e19e9fb4
  comm :: Text.Parsec.String.Parser AST.Comm
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.comm1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
c77da99b13a9395a0ace2b3b15753f0a
  comm1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Comm
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Comm
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ AST.Comm
                   Parser.comm5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))
                   (Parser.comm2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm -> AST.Comm -> AST.Comm>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
fdb74722decd4d0448afea7c407881d6
  comm2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Comm -> AST.Comm -> AST.Comm)
                   (Parser.comm4 @ u)
                   (Parser.comm3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm -> AST.Comm -> AST.Comm>_R))) -}
0fc18a881d01482e626eeccdf6c034bd
  comm3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Comm -> AST.Comm -> AST.Comm)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Comm -> AST.Comm -> AST.Comm)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Comm -> AST.Comm -> AST.Comm)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.Seq
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
517a9780d13d5fddaaadc9027766e9a9
  comm4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis18 }) -}
166b0fa49bc6eee74e76806db342cf9f
  comm5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Comm
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
7bf1390477783ffe031f165459ec796c
  commterm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity AST.Comm
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.comm5
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
4e04c323aacf483b933c988fa92dbe21
  ifThenElse ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity AST.Comm
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.ifThenElse1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
bf58420261d8ea2bb538072a2c4ad656
  ifThenElse1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ AST.Comm
                   Parser.ifThenElse4
                   Parser.ifThenElse2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))) -}
6c2e51b7c7a1012c9ffc213fcb884dd8
  ifThenElse2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Bool)
                   Parser.boolexp5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool>_R))
                   (Parser.boolexp2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Bool
                              -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R))
                   @ b1
                   s1
                   (\ (x :: AST.Exp GHC.Types.Bool)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.ifThenElse3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: AST.Exp GHC.Types.Bool)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.ifThenElse3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
1491fcf36cb1ba73b0830642d544f929
  ifThenElse3 ::
    AST.Exp GHC.Types.Bool
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
bfa9ba6a60d7d90e65c66a8365234e7b
  ifThenElse4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis62 }) -}
a24dcb40a35b39c57778f4e3cdfdf200
  intassgn ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.intassgn1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
9e40a29aca5878dce4141f0756472b0b
  intassgn1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: AST.Exp GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: AST.Exp GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.intassgn2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Exp GHC.Types.Int)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    Parser.intassgn2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Exp GHC.Types.Int)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr }) -}
468276596f970f0fbf741fe5e533b041
  intassgn10 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WDiv
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
4f67b81c74521bb4cae09fc183149556
  intassgn11 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis36 }) -}
ebd0df0dd367f9cfb3245d3c22353ca5
  intassgn12 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WTimes
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
093beef5d7edb3436b12340902e45a5a
  intassgn13 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis38 }) -}
00ad838605e09e749bf74cb5ace6b6e7
  intassgn14 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
58eaabe9a39a939dd38286b748b8c5b4
  intassgn15 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis24 }) -}
41591a27ad06bb1d204f7d82c70cefa1
  intassgn2 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (AST.Exp GHC.Types.Int
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (AST.Exp GHC.Types.Int
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (var :: GHC.Base.String)
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: AST.Exp GHC.Types.Int
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: AST.Exp GHC.Types.Int
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Int)
                   Parser.intassgn15
                   (\ @ b2
                      (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (cok :: AST.Exp GHC.Types.Int
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b2)[OneShot]
                      (cerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b2)[OneShot]
                      (eok :: AST.Exp GHC.Types.Int
                              -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                              -> Text.Parsec.Error.ParseError
                              -> Data.Functor.Identity.Identity b2)[OneShot]
                      (eerr :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b2)[OneShot] ->
                    Text.Parsec.Combinator.$wchainl1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ GHC.Types.Char
                      @ ()
                      @ (AST.Exp GHC.Types.Int)
                      Parser.intassgn8
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <GHC.Base.String>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Int>_R))
                      (Parser.intassgn3 @ ())
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <GHC.Base.String>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Int
                                 -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                      @ b2
                      s1
                      (\ (x :: AST.Exp GHC.Types.Int)
                         (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok
                         (AST.$WEAssgn var x)
                         s2
                         (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                          case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                          case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww4
                                 ww5
                                 ww6
                                 ww2
                                 ww11
                                 ww12
                                 ww13
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                          Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                      cerr
                      (\ (x :: AST.Exp GHC.Types.Int)
                         (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok
                         (AST.$WEAssgn var x)
                         s2
                         (case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                          case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                          case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                          case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww4
                                 ww5
                                 ww6
                                 ww2
                                 ww11
                                 ww12
                                 ww13
                                 (GHC.Types.[]
                                    @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                          Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                      eerr)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int>_R))
                   @ b1
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
d32cf1130c8fe7d6f7c58b2d77d8543f
  intassgn3 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (cok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Int
                      -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                   (Parser.intassgn7 @ u)
                   (Parser.intassgn6 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ u
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (AST.Exp GHC.Types.Int
                         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                      (Parser.intassgn5 @ u)
                      (Parser.intassgn4 @ u)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <u>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Int
                                 -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: AST.Exp GHC.Types.Int
                               -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
363b6b10e25547cb57f612288c6c3cde
  intassgn4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WMinus
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
1f02132b6993c756ef556ae7ede009e2
  intassgn5 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis40 }) -}
f77c1be46f0a09248a22ef3ef518beba
  intassgn6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WPlus
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
d40ed51658fb46c2bddc4bb4ba647bc3
  intassgn7 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis42 }) -}
eded2569c3ca5722b3114c5b1fd3bf81
  intassgn8 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Int)
                   Parser.intassgn14
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int>_R))
                   (Parser.intassgn9 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
546188198a8870add1cc460279d9303f
  intassgn9 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (cok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State GHC.Base.String u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Int
                      -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                   (Parser.intassgn13 @ u)
                   (Parser.intassgn12 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ u
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ (AST.Exp GHC.Types.Int
                         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                      (Parser.intassgn11 @ u)
                      (Parser.intassgn10 @ u)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <u>_R
                                <Data.Functor.Identity.Identity>_R
                                <AST.Exp GHC.Types.Int
                                 -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                      @ b
                      s1
                      cok
                      cerr
                      (\ (y :: AST.Exp GHC.Types.Int
                               -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String u)[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
a2e19a871a953400b9c7eb32b4401f87
  intexp :: Text.Parsec.String.Parser (AST.Exp GHC.Types.Int)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
bd3eb28c501b4f9a34d070f8bd323409
  intexp1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w4 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ [GHC.Types.Char]
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Int)
                   Parser.intexp5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int>_R))
                   (Parser.intexp2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
e6bf7892e6aa5c7ead383d7847e2d4b9
  intexp2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ u
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ (AST.Exp GHC.Types.Int
                      -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                   (Parser.intexp4 @ u)
                   (Parser.intexp3 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))) -}
21b091540051951626c6593e65d7da1d
  intexp3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
        -> Text.Parsec.Prim.State [GHC.Types.Char] u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] u)
                   (ds :: (AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: (AST.Exp GHC.Types.Int
                            -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] u
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   AST.$WESeq
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
e1e45bd962129dc8e71ef9d6ae615eae
  intexp4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case Parser.lis
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 Parser.lis16 }) -}
5aac7509cb4700c5d4dc6516fd4ad65f
  intexp5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: AST.Exp GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: AST.Exp GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr1 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     Text.Parsec.Combinator.$wchainl1
                       @ GHC.Base.String
                       @ Data.Functor.Identity.Identity
                       @ GHC.Types.Char
                       @ ()
                       @ (AST.Exp GHC.Types.Int)
                       Parser.intassgn8
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <GHC.Base.String>_R
                                 <()>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <AST.Exp GHC.Types.Int>_R))
                       (Parser.intassgn3 @ ())
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <GHC.Base.String>_R
                                 <()>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <AST.Exp GHC.Types.Int
                                  -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                       @ b
                       s1
                       cok
                       cerr
                       (\ (y :: AST.Exp GHC.Types.Int)
                          (s' :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        eok y s' (Text.Parsec.Error.mergeError err err'))
                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                        eerr (Text.Parsec.Error.mergeError err err'))
                 } in
                 Parser.intassgn1 @ b s1 cok eerr1 eok eerr1) -}
65f8981d35c84f3df12e040cf812ed38
  intfactor ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.intassgn14
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
5edf36ddcc588373ec61a3c3467c9abe
  intplusmin ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.intplusmin1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
b9eea987c32fd9de33b1c32fba5925bc
  intplusmin1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (AST.Exp GHC.Types.Int
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: AST.Exp GHC.Types.Int
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (AST.Exp GHC.Types.Int)
                   Parser.intassgn8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int>_R))
                   (Parser.intassgn3 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Exp GHC.Types.Int
                              -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
9f985a168fd4cc39a002e9dd81df1d18
  intterm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.intassgn8
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int>_R)) -}
b44d14321f63a72992f48a21a09d0c88
  lis :: Text.Parsec.Token.TokenParser u
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Token.makeTokenParser
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   (Parser.lis1 @ u)) -}
9acdd56d060c53affb512bdb68d6e1dc
  lis1 ::
    Text.Parsec.Token.GenLanguageDef
      GHC.Base.String u Data.Functor.Identity.Identity
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Token.LanguageDef
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   Parser.lis72
                   Parser.lis70
                   Parser.lis68
                   GHC.Types.True
                   (Text.Parsec.Language.emptyDef7 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.emptyDef4 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.emptyDef1 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Parser.lis66 @ u)
                   Parser.lis44
                   Parser.lis2
                   GHC.Types.True) -}
b6e84ae9ba2a56d9dc8b61f116b80a7b
  lis10 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis26
                   Parser.lis11) -}
abbf20c9ed22bc669f59870c7666deb7
  lis11 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis24
                   Parser.lis12) -}
dfff66ec97dc987deec3aaa4330900af
  lis12 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis22
                   Parser.lis13) -}
6358fc24fe8e906c049bedf4795ed398
  lis13 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis20
                   Parser.lis14) -}
8e4b26ea90ec15e64203d646837f3313
  lis14 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis18
                   Parser.lis15) -}
f81c7d2678132374e140e8b898b44963
  lis15 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis16
                   (GHC.Types.[] @ GHC.Base.String)) -}
8b63258d4bee10194045cd7ebc3c3e5c
  lis16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis17) -}
e6ca46351fb710eb31ea3acfa263f3df
  lis17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (","#) -}
e08f88239d17e50500b20c589a442e23
  lis18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis19) -}
829a5fbf68bef924f7555f4291bab074
  lis19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (";"#) -}
eebf5571b608229d87a0fe86ac5d879b
  lis2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis42
                   Parser.lis3) -}
77af78e6f2fde1c1885a18096e1c67c1
  lis20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis21) -}
6f682f5c1a4bdac1a63c3564ab1d2d97
  lis21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!="#) -}
64a67e1f14bf1d55fea9b983ea25f22f
  lis22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis23) -}
834895896da315803734bae37a2ef0cf
  lis23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=="#) -}
4c2ac25dba9b9b7769f9d7025242dc2b
  lis24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis25) -}
12c9c46be28900c670c9f290b775e3fe
  lis25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("="#) -}
a5b3ecebf941fe2d0694bca9f0d1286c
  lis26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis27) -}
65639541b565be480fed42ddf7fbbc9e
  lis27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!"#) -}
23b96ebd4996cefb8b802864c64640ce
  lis28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis29) -}
c3d10efb23be59541618eb827184a53c
  lis29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("||"#) -}
e61b9bdc8293172d818dbd538acdb37b
  lis3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis40
                   Parser.lis4) -}
de7cabac6dfc781eaeabb44d0f6bfdc8
  lis30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis31) -}
5c88707ca02e3639f7fd431d768a7af3
  lis31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("&&"#) -}
11ebe6738c81cd3217add0ca2aed3e63
  lis32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis33) -}
3215b40b1e0b380b420a980364d9c6a2
  lis33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
d527fee0d3003790365ddde22efaa068
  lis34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis35) -}
bf57a2a58fe596abd3f7ead655e31ac4
  lis35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
132f73f4a91909d9c0b8615ffe1151b3
  lis36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis37) -}
cdbd04419fc7b0df36d8de6eafd14375
  lis37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
f222edf9e752442bd3ba59dfa65e53a1
  lis38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis39) -}
9961fb99ce707f26a82ea9d752ad4448
  lis39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
57f5c1b1b4bf5aa68ca7b775dcc84bea
  lis4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis38
                   Parser.lis5) -}
a6af701766800892f234322cb8c2b503
  lis40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis41) -}
7c69b357f4cf4d5d67d43c4005017bb1
  lis41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
b36bc880b8677cefdeee3ec5ad661b60
  lis42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis43) -}
f26ff256af9e5af2e927870e4b522feb
  lis43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+"#) -}
5adfee29950238f345887fb0d7dd898e
  lis44 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis64
                   Parser.lis45) -}
1782801ea09960d2ab8d248603710ec1
  lis45 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.bVal3
                   Parser.lis46) -}
dd10b2e951a8baa654dfd136a3f69c0f
  lis46 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis62
                   Parser.lis47) -}
e8a1193b52a6721561b905cfe6df39ba
  lis47 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis60
                   Parser.lis48) -}
f0f331aeeca1b14e7db9c4676d81de21
  lis48 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis58
                   Parser.lis49) -}
a9e98d6cc75f21781078f7f75fc553ea
  lis49 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis56
                   Parser.lis50) -}
0f256252c646c9cad6c1e2f6d66c7ef5
  lis5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis36
                   Parser.lis6) -}
01193bbb52b2ee52d76db4a5a7274261
  lis50 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis54
                   Parser.lis51) -}
4d045bd0bb38d4d3542ccc0a8f88c1dd
  lis51 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis52
                   (GHC.Types.[] @ GHC.Base.String)) -}
6fc5adf6f1eed73ba841ba80ef4c50a4
  lis52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis53) -}
aabf064c5799759443a0cb6e43167dde
  lis53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("until"#) -}
eb88d361d6634dc15b6e919bd8952d8f
  lis54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis55) -}
1ae9f40b479300550903a3f5c4f2b323
  lis55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("skip"#) -}
fbcf5a2715c2fe944b562222ff1b37db
  lis56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis57) -}
31465ae946d01385a5139404205cce97
  lis57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("repeat"#) -}
f8967aa18acb8b417f1257cb4c3f66b3
  lis58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis59) -}
86c4817001c0e7c3f50432dd0dc62ef5
  lis59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("end"#) -}
a3abf7a955da21132f581d2084210916
  lis6 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis34
                   Parser.lis7) -}
9bff83f6aba08bfe56b50c4b8973626d
  lis60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis61) -}
16d1b8edf533982c68a6cccd2a3a0712
  lis61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
7be3d3a1358e65fda703101f9e6aeb63
  lis62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis63) -}
ac7388dbf77e9eb07c09a82c1124c30c
  lis63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("if"#) -}
401b8331c2dcdfef15390dfc06bbfd6f
  lis64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis65) -}
16bc5c81a99767f58806054a70aaf5a3
  lis65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("true"#) -}
457cdad26f4fb52d3e5b9907494acb50
  lis66 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ u
                   (Parser.$s$fStream[]mtok @ GHC.Types.Char)
                   Parser.lis67) -}
bc52c0d8ced6c45744bd8f3c14e7cf6c
  lis67 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '='#) -}
567ccc9ac891e213c680a18897e04b5e
  lis68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis69) -}
718983b2072922eca037039bbe8737dd
  lis69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("//"#) -}
e7410157a46befbb6cdd7a415db05973
  lis7 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis32
                   Parser.lis8) -}
19e891a55f7bdaf96ea7c034197d271a
  lis70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis71) -}
1b36836f000fcdc158bca2249c5f2103
  lis71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*/"#) -}
47c51d2b14b11d3047f10ef1da06c593
  lis72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Parser.lis73) -}
48f429f85e5e0672df88574511f19af2
  lis73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/*"#) -}
610f6b77f9ac7e6d897bb64833e947e8
  lis8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis30
                   Parser.lis9) -}
ad9f0a1901c5bc067fd6772350deba8f
  lis9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Parser.lis28
                   Parser.lis10) -}
d9ddaaf8c78b79b8283d390486fda7bc
  opAnd ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool
       -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp6
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R)) -}
5668e2b141d5ce0c3bb40aeb1ba75b85
  opCompare ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.opCompare1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool>_R)) -}
f8403c4e68ebc3b9ef8e325db29ca533
  opCompare1 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((AST.Exp GHC.Types.Int
         -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Bool)
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
4be638af9309cdb8c5119ff4ab448459
  opOr ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Bool
       -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.boolexp2
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Bool
                           -> AST.Exp GHC.Types.Bool -> AST.Exp GHC.Types.Bool>_R)) -}
cc02ebd3a30752e2266eb87685d9255d
  opPlusMin ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.intassgn3
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R)) -}
51f556f23d2fb108aadc23273e4a5984
  opSeq ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.intexp2
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R)) -}
efeea9d6b5077cd073ae5e3d03ad0ef0
  opTimesDiv ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Exp GHC.Types.Int
       -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Parser.intassgn9
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Exp GHC.Types.Int
                           -> AST.Exp GHC.Types.Int -> AST.Exp GHC.Types.Int>_R)) -}
d4e4244916eabddd1cbd030559a4772d
  opcomm ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      (AST.Comm -> AST.Comm -> AST.Comm)
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.comm2
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm -> AST.Comm -> AST.Comm>_R)) -}
3f0da735899befee863645e3bdd1d397
  parseComm ::
    Text.Parsec.Pos.SourceName
    -> GHC.Base.String
    -> Data.Either.Either Text.Parsec.Error.ParseError AST.Comm
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.parseComm1
                  `cast`
                (<Text.Parsec.Pos.SourceName>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Data.Functor.Identity.N:Identity[0]
                          <Data.Either.Either Text.Parsec.Error.ParseError AST.Comm>_R) -}
e8d26c366e04375cc4b7c5321fc8adc6
  parseComm1 ::
    Text.Parsec.Pos.SourceName
    -> GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either Text.Parsec.Error.ParseError AST.Comm)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (name :: Text.Parsec.Pos.SourceName)
                   (s1 :: GHC.Base.String) ->
                 case (Parser.parseComm6
                         @ AST.Comm
                         Parser.comm1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <GHC.Base.String>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <AST.Comm>_R))
                         @ (Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm)))
                         (Text.Parsec.Prim.State
                            @ GHC.Base.String
                            @ ()
                            s1
                            (Text.Parsec.Pos.SourcePos name 1# 1#)
                            GHC.Tuple.())
                         Parser.parseComm5
                           `cast`
                         (<AST.Comm>_R
                          ->_R <Text.Parsec.Prim.State GHC.Base.String ()>_R
                          ->_R <Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () AST.Comm))>_R))
                         Parser.parseComm4
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () AST.Comm))>_R))
                         Parser.parseComm3
                         Parser.parseComm2
                           `cast`
                         (<Text.Parsec.Error.ParseError>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Parsec.Prim.Consumed
                                           (Data.Functor.Identity.Identity
                                              (Text.Parsec.Prim.Reply
                                                 GHC.Base.String () AST.Comm))>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))>_R) of wild {
                   Text.Parsec.Prim.Consumed r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R) of wild1 {
                        Text.Parsec.Prim.Ok x ds ds1
                        -> (Data.Either.Right @ Text.Parsec.Error.ParseError @ AST.Comm x)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either Text.Parsec.Error.ParseError AST.Comm>_R))
                        Text.Parsec.Prim.Error err
                        -> (Data.Either.Left @ Text.Parsec.Error.ParseError @ AST.Comm err)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        Text.Parsec.Error.ParseError AST.Comm>_R)) }
                   Text.Parsec.Prim.Empty r
                   -> case r `cast`
                           (Data.Functor.Identity.N:Identity[0]
                                <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R) of wild1 {
                        Text.Parsec.Prim.Ok x ds ds1
                        -> (Data.Either.Right @ Text.Parsec.Error.ParseError @ AST.Comm x)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either Text.Parsec.Error.ParseError AST.Comm>_R))
                        Text.Parsec.Prim.Error err
                        -> (Data.Either.Left @ Text.Parsec.Error.ParseError @ AST.Comm err)
                             `cast`
                           (Sym (Data.Functor.Identity.N:Identity[0]
                                     <Data.Either.Either
                                        Text.Parsec.Error.ParseError AST.Comm>_R)) } }) -}
a806fb717be4f800496cb03928f0eb17
  parseComm2 ::
    Text.Parsec.Error.ParseError
    -> Text.Parsec.Prim.Consumed
         (Data.Functor.Identity.Identity
            (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: (\ (err :: Text.Parsec.Error.ParseError) ->
                 Text.Parsec.Prim.Empty
                   @ (Data.Functor.Identity.Identity
                        (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                   (Text.Parsec.Prim.Error @ GHC.Base.String @ () @ AST.Comm err)
                     `cast`
                   (Sym (Data.Functor.Identity.N:Identity[0]
                             <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R))) -}
62bc2316b309b2d06d0ed53642aee92c
  parseComm3 ::
    AST.Comm
    -> Text.Parsec.Prim.State GHC.Base.String ()
    -> Text.Parsec.Error.ParseError
    -> Data.Functor.Identity.Identity
         (Text.Parsec.Prim.Consumed
            (Data.Functor.Identity.Identity
               (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm)))
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U><S(LSS),1*U(U,U,U)><L,U>m2,
     Unfolding: (\ (a1 :: AST.Comm)
                   (s' :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                   (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                 case s' of dt { Text.Parsec.Prim.State ipv ipv1 ipv2 ->
                 (Text.Parsec.Prim.Empty
                    @ (Data.Functor.Identity.Identity
                         (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                    (Text.Parsec.Prim.Ok @ GHC.Base.String @ () @ AST.Comm a1 dt err)
                      `cast`
                    (Sym (Data.Functor.Identity.N:Identity[0]
                              <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R)))
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <Text.Parsec.Prim.Consumed
                              (Data.Functor.Identity.Identity
                                 (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))>_R)) }) -}
dd17104f72a4e5187047cde2d323dd1f
  parseComm4 ::
    Text.Parsec.Error.ParseError
    -> Text.Parsec.Prim.Consumed
         (Data.Functor.Identity.Identity
            (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: (\ (err :: Text.Parsec.Error.ParseError) ->
                 Text.Parsec.Prim.Consumed
                   @ (Data.Functor.Identity.Identity
                        (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                   (Text.Parsec.Prim.Error @ GHC.Base.String @ () @ AST.Comm err)
                     `cast`
                   (Sym (Data.Functor.Identity.N:Identity[0]
                             <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R))) -}
c027454c88bb0b5b4c7ae3624c11af19
  parseComm5 ::
    AST.Comm
    -> Text.Parsec.Prim.State GHC.Base.String ()
    -> Text.Parsec.Error.ParseError
    -> Text.Parsec.Prim.Consumed
         (Data.Functor.Identity.Identity
            (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*U(U,U,U)><L,U>m1,
     Unfolding: (\ (a1 :: AST.Comm)
                   (s' :: Text.Parsec.Prim.State GHC.Base.String ())
                   (err :: Text.Parsec.Error.ParseError) ->
                 Text.Parsec.Prim.Consumed
                   @ (Data.Functor.Identity.Identity
                        (Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm))
                   (case s' of dt { Text.Parsec.Prim.State ipv ipv1 ipv2 ->
                    (Text.Parsec.Prim.Ok @ GHC.Base.String @ () @ AST.Comm a1 dt err)
                      `cast`
                    (Sym (Data.Functor.Identity.N:Identity[0]
                              <Text.Parsec.Prim.Reply GHC.Base.String () AST.Comm>_R)) })) -}
8e21acfa78957c78e02b946a5c59789e
  parseComm6 ::
    Text.Parsec.String.Parser a
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
5f82c70862c7be8d5a0cba25540d2abd
  repeatUntil ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity AST.Comm
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Parser.repeatUntil1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <AST.Comm>_R)) -}
a51d918ecefccdb2194156d652db3a1f
  repeatUntil1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ AST.Comm
                   Parser.repeatUntil4
                   Parser.repeatUntil2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))) -}
b138be7238b988b39c0376ebd9c4889f
  repeatUntil2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (AST.Comm
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: AST.Comm
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wchainl1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ AST.Comm
                   Parser.comm5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm>_R))
                   (Parser.comm2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <AST.Comm -> AST.Comm -> AST.Comm>_R))
                   @ b1
                   s1
                   (\ (x :: AST.Comm)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.repeatUntil3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: AST.Comm)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Parser.repeatUntil3
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: AST.Comm)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
f0bb257619cba0f561fe2183a6d8302d
  repeatUntil3 ::
    AST.Comm
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (AST.Comm
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
5012bc7a5ac11333d3442d71027fad62
  repeatUntil4 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Parser.lis
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 Parser.lis56 }) -}
1b7584f6f4cfaeb5bd8bb807e22331a5
  totParser ::
    Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.parseComm6
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.String.Parser a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
"SPEC/Parser $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                          (v :: GHC.Base.Monad
                                                                  Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = Parser.$s$fStream[]mtok @ tok
"SPEC/Parser $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = Parser.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

